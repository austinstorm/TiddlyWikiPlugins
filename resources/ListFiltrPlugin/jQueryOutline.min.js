/***
|''Documentation''|http://listfiltr.tiddlyspace.com|
|''Idea''|http://stackoverflow.com/questions/1852816/nested-ordered-lists|
|''Version''|2013.03.01|
|''Readable Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/resources/ListFiltrPlugin/jQueryOutline.js|
/%***/
/*{{{*/
(function (e) { e.fn.outline = function (t, n) { function r(e) { if (!+e) return false; var t = String(+e).split(""), n = "", r = 3, i = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"]; while (r--) n = (i[+t.pop() + r * 10] || "") + n; return Array(+t.join("") + 1).join("M") + n } function i(e) { var n, i, s = "", o, u = t.counterTemplates, a = t.plain, f = a ? e.length - 1 : 0; for (n = f; n < e.length; n++) { i = e[n]; o = n % u.length; switch (u[o].substr(0, 1)) { case "a": i = String.fromCharCode(96 + i); break; case "A": i = String.fromCharCode(64 + i); break; case "i": i = r(i).toLowerCase(); break; case "I": i = r(i); break } s += i + u[o].substr(1) } return s + " " } var t = e.extend({}, e.fn.outline.defaults, t), n = n || []; this.each(function () { e(this).children("li").each(function (r) { var s = n.concat([r + 1]); e("<span></span>").addClass(t.liClass).text(i(s)).prependTo(this); e(this).children("ol").outline(t, s) }) }); if (!n.length) this.addClass(t.olClass) }; e.fn.outline.defaults = { liClass: "pseudo-ol-li", olClass: "pseudo-ol", counterTemplates: ["1.", "a.", "i."], plain: true } })(jQuery); config.shadowTiddlers["StyleSheetjQueryOutline"] = "/*{{{*/\n" + "ol .pseudo-ol-li { display: none }\n" + "ol.pseudo-ol, ol.pseudo-ol ol { list-style: none; margin-left: 1.5em; padding-left: 0.5em;}\n" + "ol.pseudo-ol {margin-left: 0.5em;padding-left:0em;}\n" + "ol.pseudo-ol .pseudo-ol-li { display: inline; font-weight: bold; padding-right:3px; }\n" + "/*}}}*/"; store.addNotification("StyleSheetjQueryOutline", refreshStyles)
//%/