/***
|''Name''|RenameTiddlersPlugin|
|''Author''|[[Tobias Beer|http://tobibeer.tiddlyspace.com]]|
|''Description''|Allows you to easily rename or delete tiddlers and have tags updated across multiple tiddlers|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/RenameTiddlersPlugin.min.js|
|''Documentation''|http://renametiddlers.tiddlyspace.com|
|''Version''|0.9.9 BETA (2013-10-07)|
|''~CoreVersion''|2.5.2|
|''License''|[[Creative Commons Attribution-Share Alike 3.0|http://creativecommons.org/licenses/by-sa/3.0/]]|
When you rename a tiddler that serves as a tag you will be asked whether you want to update the tagged tiddlers as well.
***/
//{{{
var me=config.renameTiddler={lang:{rename:"Rename tag '%0' to '%1' in %2 tidder(s)?",remove:"Remove tag '%0' from %1 tidder(s)?"},updateTagged:function(e,t,n){var r,i,s,o,u,a,f;store.suspendNotifications();for(r=0;r<n.length;r++){a=n[r];if(t)a.tags.splice(a.tags.indexOf(e),1,t);else a.tags.splice(a.tags.indexOf(e),1);a.modified=new Date}store.resumeNotifications();store.notifyAll();if(config.options.chkAutoSave)autoSaveChanges()},core:{getTaggedTiddlersWritable:function(e,n){var r=[],i=this.getTaggedTiddlers(e);for(t=0;t<i.length;t++){tid=i[t];sp=tid.fields["server.permissions"];tRcp=tid.fields["server.recipe"];sRcp=config.extensions.tiddlyweb?config.extensions.tiddlyweb.status.space.recipe:"";pos=sRcp.indexOf("_private");if(tid.title==e||tid.title==n||!tRcp||sp&&(sp.indexOf("write")<0||pos!=sRcp.length-8||sRcp.substr(0,pos)!=tRcp.substr(0,pos)||tid.doNotSave&&tid.doNotSave()))continue;r.push(tid)}return r},saveTiddlerRENAMETIDDLERS:TiddlyWiki.prototype.saveTiddler,saveTiddler:function(e,t,n,r,i,s,o,u,a,f){var l,c;if(e!=t){var h=(this.getValue(e,"renamed")||"").readBracketedList();h.pushUnique(e);this.setValue(e,"renamed","[["+(h.length?h.join("]][["):e)+"]]");var p=this.getTaggedTiddlersWritable(e,t);l=p.length;if(p.length){if(confirm(me.lang.rename.format([e,t,l])))me.updateTagged(e,t,p);if(!this.tiddlerExists(e)&&n=="")return null}}return this.saveTiddlerRENAMETIDDLERS(e,t,n,r,i,s,o,u,a,f)},removeTiddlerRENAMETIDDLER:TiddlyWiki.prototype.removeTiddler,removeTiddler:function(e){var t=this.getTaggedTiddlersWritable(e);if(t.length)if(confirm(me.lang.remove.format([e,t.length])))me.updateTagged(e,"",t);return this.removeTiddlerRENAMETIDDLER(e)},getReferringTiddlers:function(e,t,n){var r=(store.getValue(e,"renamed")||"").readBracketedList();if(!this.tiddlersUpdated)this.updateTiddlers();return this.reverseLookup("links",r.push(e),true,n)},reverseLookup:function(e,t,n,r){var i=[];this.forEachTiddler(function(r,s){var o=!n;var u;if(["links","tags"].contains(e)){u=s[e]}else{var a=TiddlyWiki.standardFieldAccess[e];if(a){u=[a.get(s)]}else{u=s.fields[e]?[s.fields[e]]:[]}}if(u.containsAny(typeof t=="object"?t:[t])){o=n}if(o)i.push(s)});if(!r)r="title";return this.sortTiddlers(i,r)}},init:function(){merge(TiddlyWiki.prototype,this.core)}};findRenamedTiddler=function(e){var t=false;if(!store.tiddlerExists(e)){store.forEachTiddler(function(n){var r=(store.getValue(n,"renamed")||"").readBracketedList();if(r.contains(e)){e=n;t=true;return false}})}return[e,t]};Story.prototype.displayTiddlerRENAME=Story.prototype.displayTiddler;Story.prototype.displayTiddler=function(e,t,n,r,i,s,o,u){t=findRenamedTiddler(t instanceof Tiddler?t.title:t)[0];return Story.prototype.displayTiddlerRENAME.apply(this,arguments)};createTiddlyLinkRENAME=createTiddlyLink;createTiddlyLink=function(e,t,n,r,i,s,o){var u=findRenamedTiddler(jQuery.trim(t));t=u[0];return jQuery(createTiddlyLinkRENAME.apply(this,arguments)).addClass(u[1]?".tiddlyLinkRenamed":"")[0]};getTiddlyLinkInfoRENAME=getTiddlyLinkInfo;getTiddlyLinkInfo=function(e,t){e=findRenamedTiddler(e)[0];return getTiddlyLinkInfoRENAME.apply(this,arguments)};config.paramifiers.open.onstart=function(e){e=findRenamedTiddler(e)[0];if(!readOnly||store.tiddlerExists(e)||store.isShadowTiddler(e))story.displayTiddler("bottom",e,null,false,null)};me.init()
//}}}