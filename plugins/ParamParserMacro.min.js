/***
|''Name''|ParamParserMacro|
|''Author''|[[Tobias Beer|http://tobibeer.tiddlyspace.com]]|
|''Version''|1.0|
|''Description''|Displays how TiddlyWiki parses macro parameters.|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/ParamParserMacro.min.js|
|''~CoreVersion''|2.6.1|
|''Documentation''|See below...|
/%***/
(function (e) { config.macros.params = { handler: function (t, n, r, i, s, o) { var u, a, f, l, c = {}, h = s.parseParams("anon", null, true), u = s.checkEval("foo", null, true), p = /^(\{\{)(.*)(\}\})$/, d = "|>|>|>|>|>| !Params Array |\n" + "| !# | !params[#-1] " + "|min-width:60px; !type " + "|min-width:60px; !evaluated? " + "|min-width:60px; !key " + "|min-width:60px; !value |\n"; for (a = 0; a < r.length; a++) { v = r[a]; f = v.indexOf(":"); l = h[0]["anon"] && h[0]["anon"].contains(v) ? null : v.substr(0, f); if (l) { if (c[l] == undefined) c[l] = 0; else c[l] = c[l] + 1 } d += "| " + (a + 1) + " |" + "{{{ " + v + " }}}| " + (l ? "named" : "simple") + " | " + (u[a] == 0 ? "no" : u[a] == 1 ? "yes" : "<html>" + "<a title='Evaluation may have failed because parameter evaluation is disabled, e.g. in TiddlySpace.' " + "href='http://tiddlywiki.org/#%5B%5BEvaluated%20Parameters%5D%5D' " + "target='_blank' class='externalLink'>" + "failed" + "</a>" + "</html>") + " |" + (l ? l : "") + " |" + (l ? h[0][l][c[l]] : v) + "|\n" } if (!a) d += "|>|>|>|>|>|//empty// |\n"; d += "|>|>|>|>|>|! Params parsed using...|\n" + "|>|>|>|>|>|padding:5px 20px; [[" + "p = paramString.parseParams('anon', null, true); |" + "http://tiddlywikidev.tiddlyspace.com/#String.prototype.parseParams()" + "]] |\n"; a = 0; d += "|>|>|>|>|>|!Simple Parameters|\n" + "|>|>|>|>|>|padding:5px 20px; as stored in array {{{p[0]['anon']}}} |\n"; e.each(h[0], function (e, t) { if (e == "anon") { a++; for (var n = 0; n < t.length; n++) { d += "| ''[" + n + "] = ''|>|>|>|>|{{{" + t[n] + "}}}|\n" } } }); if (!a) d += "|>|>|>|>|>|//none// |\n"; a = 0; d += "|>|>|>|>|>|!Named Parameters|\n" + "|>|>|>|>|>|padding:5px 20px; fetched using [[" + "var fooVal = getParam(p,'foo',''); |" + "http://tiddlywikidev.tiddlyspace.com/#getParam()" + "]] |\n"; e.each(h[0], function (e, t) { if (e != "anon") { a++; d += "| ''" + e + " = ''|>|>|>|>|{{{" + getParam(h, e, "") + "}}}"; if (t.length > 1) { d += "<br><br>There actually are multiple values for parameter ''" + e + "''!<br>" + "If you -- as a developer -- want to support this,<br>" + "do not use {{{" + e + "Val = getParam(p, '" + e + "', '');}}}.<br><br>" + "Rather retrieve all values using<br>" + "{{{" + e + "Arr = p[0]['" + e + "'];}}}.<br><br>" + "Then, access your values like this:"; for (var n = 0; n < t.length; n++) { d += "<br>''" + e + "Arr[" + n + "] = ''{{{" + t[n] + "}}}" } } d += "|\n" } }); if (!a) d += "|>|>|>|>|>|//none// |\n"; d += "|>|>|>|>|>|!parsed paramString|\n" + "| ''p = ''|>|>|>|>|" + "<html><code style='white-space:pre'>" + JSON.stringify(h, undefined, 2).replace(/\n/mg, "</code><br /><code style='white-space:pre'>") + "</code></html>|\n"; wikify(d, t); e("table", t).last().find("td").css("vertical-align", "top") } }; String.prototype.checkEval = function (e, t, n, r, i) { var s = 0; var o = []; var u = function (e, t) { var r; if (e[t]) r = e[t]; else if (e[t + 1]) r = e[t + 1]; else if (e[t + 2]) r = e[t + 2]; else if (e[t + 3]) { try { r = e[t + 3]; if (n && config.evaluateMacroParameters != "none") { if (config.evaluateMacroParameters == "restricted") { if (window.restrictedEval) { r = window.restrictedEval(r); o.push(1) } else { o.push(2) } } else { r = window.eval(r); o.push(1) } } else { o.push(2) } } catch (i) { o.push(2) } } else if (e[t + 4]) r = e[t + 4]; else if (e[t + 5]) r = ""; return r }; var a = [{}]; var f = '(?:"((?:(?:\\\\")|[^"])+)")'; var l = "(?:'((?:(?:\\\\')|[^'])+)')"; var c = "(?:\\[\\[((?:\\s|\\S)*?)\\]\\])"; var h = "(?:\\{\\{((?:\\s|\\S)*?)\\}\\})"; var p = r ? "([^\"'\\s]\\S*)" : "([^\"':\\s][^\\s:]*)"; var d = "((?:\"\")|(?:''))"; var v = "(?:\\s*)"; var m = "(?:" + f + "|" + l + "|" + c + "|" + h + "|" + p + "|" + d + ")"; var g = r ? new RegExp(m, "mg") : new RegExp(v + m + v + "(?:(\\:)" + v + m + ")?", "mg"); var y; do { y = g.exec(this); if (y) { var b = u(y, 1); var w = u(y, 8); if (w == null && e) { w = b; b = e } else if (w == null && t) { w = t } a.push({ name: b, value: w }); if (i) { e = b; t = w } } if (o.length == s) o.push(0); s++ } while (y); return o }; if (window.location.href.indexOf("http://paramparser.tiddlyspace.com") >= 0) config.evaluateMacroParameters = "full" })(jQuery)
//%/