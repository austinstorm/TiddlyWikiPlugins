/***
|''Name''|NameSpacePlugin|
|''Author''|[[Tobias Beer|http://tobibeer.tiddlyspace.com]]|
|''Documentation''|http://namespace.tiddlyspace.com|
|''Version''|1.0|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/NamesSpacePlugin.min.js|
|''~CoreVersion''|2.6.5|
/%*/
(function (e) { config.macros.view.handler_NameSpace = config.macros.view.handler; config.macros.view.handler = function (e, t, n, r, i, s) { if (n.contains("namespace")) { wikify("<<ns [[" + s.title + "]] " + i + ">>", e) } else { return config.macros.view.handler_NameSpace.apply(this, arguments) } }; config.macros.ns = { defaults: { separator: ":", infoSource: "??ns_info", lnkInfo: "i", lnkInfoTooltip: "info for '%0'", btnLast: "»", txtListBullet: "» ", btnTooltip: "tiddlers under namespace '%0'", txtNoneFound: "No futher items found.", txtMoreItems: "Further items...", lnkOpenElement: "Open '%0'", lnkOpenElementTooltip: "Click to open the tiddler '%0'...", txtTitleCategory: "%0 (category) ", txtTitleNameSpace: "%0 ...", txtTitleElement: "[%0]", btnAddLabelInline: "+", btnAddLabelCategory: "Add new category item...", btnAddLabelNameSpace: "Add new item...", btnAddTooltipCategory: "Add new category item under '%0'...", btnAddTooltipNameSpace: "Add new namespace item under '%0'...", btnAddTitleCategory: "New item for category %0", btnAddTitleNameSpace: "%0:NewItemTitle", btnAddItem: "<<newTiddler " + 'title:"%0" ' + 'label:"%1" ' + 'prompt:"%2" ' + 'fields:"%3" ' + ">>" }, handler: function (t, n, r, i, s, o) { var u = r[0]; r.shift(); if (!u) { u = story.findContainingTiddler(t); u = u ? u.getAttribute("tiddler") : "" } if (!u) return; var a = [], f = "", l, c, h, p, d, v, m, g, y, b = "", w, E, S, E, x, T = this.defaults, N = s.parseParams("anon", null, true), C = getParam(N, "ns", ""), f = getParam(N, "category", ""), h = getParam(N, "element", u), k = getParam(N, "separator", T.separator), L = r.contains("readonly") || readOnly, A = function (e) { e.removeClass("button").addClass("tiddlyLink tiddlyLinkNonExisting") }; if (r.contains("popup")) { C = C ? C : u; if (this.getItems(u, C, k, f, 3) || !f && C != u) { e(createTiddlyButton(t, getParam(N, "label", C == u ? T.btnLast : k), getParam(N, "tooltip", T.btnTooltip.format([C])), this.click, "ns_btn ns_btn_popup")).data("params", { tid: u, ns: C, element: h, category: f, sep: k, readonly: L }) } else if (C && C != u) { wikify('{{ns_btn{"""' + k + '"""}}}', t) } return } if (r.contains("list")) { C = u; tids = config.macros.ns.getItems(null, C, k, f, r.contains("category") ? 1 : r.contains("namespace") ? 2 : 0); for (m = 0; m < 2; m++) { lst = tids[m]; g = lst.length; if (!r.contains("notitles") && (m == 0 && g || m > 0)) { b += (m > 0 && tids[0].length ? "\n" : "") + "\n{{ns_title{[[" + T["txtTitle" + (m == 0 ? "Category" : "NameSpace")].format([C]) + "|" + C + "]]" + (L ? "" : "{{ns_list_add{" + this.createButtonToAdd(null, C, m < 1 ? "Category" : "NameSpace", T.btnAddLabelInline) + "}}}") + "}}}"; info = tids[0].length && m > 0 ? "" : this.getInfo(C); if (info) b += "\n" + info } for (p = 0; p < g; p++) { d = lst[p]; c = d.split(k).length; if (m > 0 && p == 0) { E = [[C.split(k).length, C]] } else if (m == 0 && tids[2].contains(d)) { E = [[d.split(k).length, d]]; S = true } while (E.length && d.indexOf(E[E.length - 1][1]) != 0) { E.pop() } y = ""; for (l = E[0][0]; l < c + (m > 0 ? 0 : 1) ; l++) y += "*"; b += "\n" + y + (tids[2].contains(d) ? " {{ns_title{[[%0|%1]]%2}}}" : " {{ns_item{[[%0|%1]]%2}}}").format([S ? d : d.substr(E[E.length - 1][1].length + 1), d, L ? "" : "{{ns_list_add{" + this.createButtonToAdd(null, d, "NameSpace", T.btnAddLabelInline) + "}}}"]); if (!S) E.push([c, d]); S = false } if (!L && r.contains("notitles") && (g || m > 0 && !tids[0].length)) { b += "\n {{ns_list_add{" + this.createButtonToAdd(null, C, m < 1 ? "Category" : "NameSpace") + "}}}" } } wikify("{{ns_list{" + b + "\n}}}", t); A(e(".ns_list").last().find(".ns_add .button")); return } w = e(t).closest(".ns")[0] || createTiddlyElement(t, "span", null, "ns"); f = store.getValue(u, "ns_cat"); if (f) { wikify("[[" + f + "]]" + this.createButtonToAdd(null, f, "Category", T.btnAddLabelInline) + "<<ns [[" + u + "]] separator:[[" + k + "]] category:[[" + f + "]] popup>>", w) } a = u.split(k); for (v = 0; v < a.length; v++) { h = a[v]; C += v < 1 ? h : k + h; wikify((v == a.length - 1 ? '{{tiddlyLink{"""' + h + '"""}}}{{ns_last{[[' + h + "|" + C + "]]}}}" : "[[" + h + "|" + C + "]]") + this.createButtonToAdd(null, C, "NameSpace", T.btnAddLabelInline) + "<<ns [[" + u + "]] ns:[[" + C + "]] element:[[" + h + "]] separator:[[" + k + "]] popup>>", w) } e('<div class="ns_clear">').insertAfter(e(".title.ns")); e(w).find(".button").removeClass("button").addClass("ns_btn ns_btn_add"); e(w).attr("tabindex", "1").bind("mouseover mouseout keyup", function (t) { var n = e(this), r = t || window.event; if (r.type == "mouseover") { if (!r.ctrlKey || n.hasClass("ns_hover")) return true; e(".ns_btn_popup", n).hide(); e(".ns_btn_add", n).show(); e(".ns_last", n).show().prev().hide(); e(".tiddlyLink", n).each(function () { var t = e(this); t.attr("tiddlyLinkDefault", t.attr("tiddlyLink")); t.attr("tiddlyLink", t.text()) }); n.addClass("ns_hover") } else { if (!n.hasClass("ns_hover")) return true; e(".ns_btn_popup", n).show(); e(".ns_btn_add", n).hide(); e(".ns_last", n).hide().prev().show(); e(".tiddlyLink", n).each(function () { var t = e(this).attr("tiddlyLinkDefault"); if (t) e(this).attr("tiddlyLink", t) }); n.removeClass("ns_hover") } }) }, getItems: function (e, t, n, r, i) { var s, o, u, a, f, l, c = store.getTiddlers("title"), h = [[], [], []], p = !e; if (p) e = ""; for (f = 0; f < c.length; f++) { l = c[f].title, s = store.getValue(l, "ns_cat"), u = e.indexOf(l); if (p) { if (s == t) { h[2].push(l) } } else { if (!p && (l == e || u == 0 && e.substr(u, 1) == n || l == t)) continue; if (r && r == s || !r && e == t && t == s) h[0].push(l); if (r && l.indexOf(r + n) == 0 && l.substr(r.length + 1).indexOf(n) < 0 || !r && l.indexOf(t + n) == 0 && l.substr(t.length + 1).indexOf(n) < 0) h[1].push(l); if (i && h[0].length + h[1].length > 0) return true } } if (p) { for (f = 0; f < c.length; f++) { l = c[f].title; for (o = 0; o < h[2].length; o++) { s = h[2][o]; if ((!i || i == 1 || i == 3) && (l == s || l.indexOf(s + n) == 0)) { h[0].push(l); break } } if ((!i || i > 1) && l.indexOf(t + n) == 0) h[1].push(l) } } return i === 3 ? false : h }, click: function (t) { var n, r, i, s, o, u, a, f, l, c, h, p = config.macros.ns, d = p.defaults, n = t || window.event, v = Popup.create(this), m = e(this).data("params"), g = m["tid"], y = m["ns"], b = m["element"], w = m["category"], E = m["sep"], S = m["readonly"], x = w || g == y ? "" : store.getValue(y, "ns_cat"); e(v).addClass("popup popup_ns"); h = config.macros.ns.getItems(g, y, E, w ? w : y, 0); for (o = 0; o < 2; o++) { f = h[o]; u = f.length; if (o == 0 && x || w || h[0].length > 0 || o == 1 && !w || w && u > 0) { s = o > 0 ? w ? w : y : x ? x : w ? w : y; p.createListTitle(v, o > 0 ? "NameSpace" : "Category", s, x); i = o > 0 && h[0].length ? "" : p.getInfo(s); if (i) { wikify(i, createTiddlyElement(createTiddlyElement(v, "li"), "span", null, "popup_ns_info")) } } for (r = 0; r < u; r++) { p.createPrettyLink(createTiddlyElement(v, "li"), f[r], d.txtListBullet + f[r].split(E).pop()) } if (o > 0 && u == 0) createTiddlyElement(v, "li", null, "popup_ns_empty", d.txtNoneFound); if (!S && (o > 0 || u > 0 || w)) { it = o == 0 ? w ? w : y : y; p.createButtonToAdd(createTiddlyElement(v, "li", null, "ns_add"), it, o == 0 ? "Category" : "NameSpace") } } if (y != b) { p.createListTitle(v, "Element", b, true); i = p.getInfo(b); if (i) { wikify(i, createTiddlyElement(createTiddlyElement(v, "li"), "span", null, "popup_ns_info")) } } Popup.show(); n.cancelBubble = true; if (n.stopPropagation) n.stopPropagation(); return false }, getInfo: function (e) { var t = this.defaults.separator, n = this.defaults.infoSource, r = n.substr(0, 2), i = n.substr(2), s = e.split(t).pop(); return r == "??" ? store.getValue(e, i) : store.getTiddlerText(e + n + i) }, createPrettyLink: function (e, t, n) { var r = createTiddlyLink(e, t); createTiddlyText(r, n); return r }, createListTitle: function (e, t, n, r) { var i = config.macros.ns; i.createPrettyLink(createTiddlyElement(e, "li", null, "ns_title " + (r ? "popup_ns_hr" : "")), n, i.defaults["txtTitle" + t].format([n])) }, btnText: function (e, t, n, r) { var i = config.macros.ns.defaults, s = i["btnAdd" + e + t]; return n ? s.format(n) : n }, createButtonToAdd: function (e, t, n, r) { var i = config.macros.ns, s = i.defaults, o = [t], u = s["btnAddItem"].format([i.btnText("Title", n, o), r ? r : (e ? s.txtListBullet + " " : "") + i.btnText("Label", n, o), i.btnText("Tooltip", n, o), n == "Category" ? "ns_cat:[[" + t + "]]" : ""]); if (e) wikify(u, e); return u } }; config.shadowTiddlers["StyleSheetNameSpace"] = "/*{{{*/\n" + ".ns_last {\n" + "   display:block;\n" + "   float:left;\n" + "}\n" + ".ns .tiddlyLink {\n" + "   display:block;\n" + "   float:left;\n" + "   padding: 0 2px;\n" + "}\n" + ".ns a.tiddlyLink:hover {\n" + "   color:[[ColorPalette::PrimaryDark]];\n" + "   background:[[ColorPalette::TertiaryPale]];\n" + "}\n" + "a.ns_btn {\n" + "   color:[[ColorPalette::TertiaryLight]];\n" + "   display:block;\n" + "   float:left;\n" + "   min-width:12px;\n" + "   padding:0 4px;\n" + "   text-align:center;\n" + "   margin:0;\n" + "}\n" + "a.ns_btn {\n" + "   color:[[ColorPalette::PrimaryMid]];\n" + "}\n" + "a.ns_btn:hover{\n" + "   color:[[ColorPalette::PrimaryDark]];\n" + "   background:[[ColorPalette::TertiaryPale]];\n" + "   border-color:transparent;\n" + "}\n" + ".popup_ns{\n" + "   max-width: 400px;\n" + "}\n" + ".popup_ns_hr {\n" + "   border-top: 1px solid [[ColorPalette::TertiaryMid]];\n" + "}\n" + ".ns_title .tiddlyLink{\n" + "   font-size: 1.2em;\n" + "   font-weight: bold;\n" + "}\n" + ".popup_ns_empty{\n" + "   padding: 3px;\n" + "}\n" + ".popup_ns_info{\n" + "   display:block;\n" + "   padding:3px;\n" + "   margin-bottom:3px;\n" + "   background:[[ColorPalette::SecondaryPale]];\n" + "}\n" + ".ns_last,\n" + ".ns_btn.ns_btn_add,\n" + ".ns_list span .ns_list_add{\n" + "   display:none;\n" + "}\n" + ".ns_list .ns_title,\n" + ".ns_list li > span{\n" + "   padding-right:30px;\n" + "}\n" + ".ns_list .ns_title:hover > .ns_list_add,\n" + ".ns_list li > span:hover > .ns_list_add{\n" + "   display:inline;\n" + "}\n" + ".ns_add .button{\n" + "   font-style: italic;\n" + "}\n" + ".title.ns{\n" + "   min-height: 1em;\n" + "}\n" + ".ns_clear{\n" + "   clear: left;\n" + "}\n" + "/*}}}*/"; store.addNotification("StyleSheetNameSpace", refreshStyles) })(jQuery)
//%/