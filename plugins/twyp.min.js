/***
|''Name:''|twyp|
|''Description:''|search, play and associate youtube videos|
|''Documentation:''|http://tobibeer.tiddlyspace.com/#twYp|
|''Author:''|Tobias Beer|
|''Version:''|0.9.7 (2010-10-25)|
|''Status:''|beta|
|''CoreVersion:''|2.5.3 or better|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/twyp.js|
/%***/
(function (e) { window.twyp = { maxSearch: 6, maxRelated: 10, maxUser: 10, vidWidth: 380, vidHeight: 320, restrictTo: "", field: "youtube", txtRelated: "Related", txtUser: "Best rated videos by ", txtPage: "Go to page ", lblShow: "Play %0", tipShow: "Click to play %0", lblHide: "Close video", tipHide: "Click to close video player", txtInfo: "by %0 | viewed: %1 | favourited: %2 | published: %3", txtRating: "rating: ", txtDuration: "duration: ", txtSearch: "-search-", lblSearch: "Please enter a search-term...", txtTag: "-category/tag-", lblTag: "Please enter a category or tag filter to constrain the search results by...", twypTemplate: "twyp##TEMPLATE", fmtSlaider: '<<slider chk%0 twyp##TEMPLATE "Search videos" "Search videos on youtube and add one to the tiddler">>', fmtPlayer: '<h2><a class="tiddlyLinkExisting" href="#" title="add to current tiddler (hold CTRL to skip the prompt and use the title as is)" rel="%0">%1</a></h2> <object width="%2" height="%3"> <param name="movie" value="%0%4&fs=1&format=5&iv_load_policy=3&enablejsapi=1&playerapiid=%5"/> <param name="allowFullScreen" value="true" /> <param name="iv_load_policy" value="3" /> <param name="wmode" value="transparent" /> <param name="allowScriptAccess" value="always"> <embed src="%0%4&format=5&fs=1&iv_load_policy=3&enablejsapi=1&playerapiid=%5" 	type="application/x-shockwave-flash" 	allowscriptaccess="always" 	wmode="transparent" 	width="%2" height="%3" 	allowfullscreen="true"> </embed></object>', relRelated: "http://gdata.youtube.com/schemas/2007#video.related", mimeFlash: "application/x-shockwave-flash", feeds: "http://gdata.youtube.com/feeds/standardfeeds/", mapQuery: { rated: "top_rated", recent: "most_recent", popular: "most_popular", respond: "most_responded", discuss: "most_discussed", featured: "recently_featured", all: "videos" }, usrSuffix: "/uploads", activeTwyp: null, shadows: [], appendScript: function (t, n, r) { e("#" + n).remove(); e("head").append(e("<script>").attr({ src: t + "&alt=json-in-script&callback=" + r, id: n, type: "text/javascript" })) }, findHref: function (e, t) { var n, r; for (n = 0; r = e.link[n]; n++) if (r.rel == t) return r.href; return null }, findMediaHref: function (e, t) { var n, r, i, s; for (n = 0; r = e.media$group.media$content[n]; n++) if (r.type == t) { s = r.url; i = s.indexOf("?"); return i < 1 ? s : s.substr(0, i) } alert("?!?"); return null }, getResults: function (t, n, r) { var i, s, o = 1, u = e(t).closest(".twyp"), a = e(t).closest("[tiddler]"), f = twyp.activeTwyp = a.attr("twyp"), l = r; l = l != "" && l != twyp.txtSearch ? l : ""; if (n) { i = t.category.value; i = i != "" && i != twyp.txtTag ? "&category=" + i : ""; u.attr({ id: f, field: a.attr("field"), search: l, cat: i, query: n }) } else { l = u.attr("search"); i = u.attr("cat"); n = u.attr("query"); o = parseInt(e(t).attr("page")) } s = twyp.feeds + twyp.mapQuery[n]; if (n == "all") s = s.replace("standardfeeds/", ""); s += "?prettyprint=true&restriction=" + twyp.restrictTo + "&max-results=" + twyp.maxSearch + "&start-index=" + ((o - 1) * twyp.maxSearch + 1) + (l == "" ? "" : "&vq=" + l) + (i ? i : ""); twyp.appendScript(s, "twypResults", "twyp.cbResults"); twyp.updateNav(o, u) }, cbResults: function (t) { try { var n = e("#" + twyp.activeTwyp), r = e(".vids", n).empty(); n.data("main", t.feed); e(t.feed.entry).each(function (t, n) { if (!n.yt$noembed) { var i = n.media$group.media$title.$t, s = e("<img/>"), o = e("<a/>"), u = n.media$group.media$description.$t, a = e("<p>").html(u); s.attr({ src: n.media$group.media$thumbnail[0].url, title: twyp.info(n) }).click(twyp.clickPlay(t, "main", s[0])); o.attr({ href: "#", "class": "tiddlyLinkExisting" }).click(twyp.clickPlay(t, "main", o[0])).html(i); r.append(e("<div/>").attr("class", "vid").append(e("<div/>").attr("class", "desc").append(o).append(s).append(e("<span/>").append(e("<div/>").html(twyp.info(n, true)))).append(a).append(e("<div/>").attr("class", "tagClear")))) } }); if (e.fn.linkify) e("p", r).linkify() } catch (i) { alert(i) } }, getRelated: function (t, n, r) { var i = r.data(n).entry[t], s = twyp.findHref(i, twyp.relRelated), o = e(".vidRel", r).empty(); if (s) { s = s.split("?")[0]; o.html("<h3>" + twyp.txtRelated + "</h3>"); s += "?&restriction=" + twyp.restrictTo + "&max-results=" + twyp.maxRelated; twyp.appendScript(s, "twypRelated", "twyp.cbMore") } }, getByUser: function (t, n, r) { e(".vidUser", t).empty().html("<h3>" + twyp.txtUser + r + "</h3>"); twyp.appendScript(n + twyp.usrSuffix + "?&restriction=" + twyp.restrictTo + "&max-results=" + twyp.maxUser + "&orderby=rating", "twypUser", "twyp.cbMore") }, cbMore: function (t) { var n, r, i, s = e("#" + twyp.activeTwyp), o = t.feed.title.$t.indexOf("Videos related to") == 0 ? "related" : "user"; s.data(o, t.feed); for (n = 0; i = t.feed.entry[n]; n++) { r = e("<img/>"); e(o == "user" ? ".vidUser" : ".vidRel", s).append(r.attr({ src: i.media$group.media$thumbnail[0].url, rel: i.media$group.media$title.$t, title: twyp.info(i) + " | " + twyp.info(i, true) }).click(twyp.clickPlay(n, o, r[0])).bind("mouseover mouseout", function (t) { var n = t ? t : window.event, r = e("." + o + "Info"); r.empty().html(n.type == "mouseover" ? this.getAttribute("rel") : " ") })) } }, info: function (e, t) { var n, r, i; if (t) { t = e.gd$rating, r = e.media$group.media$content[0].duration; return [t ? twyp.txtRating + t.average.toString().substr(0, 3) + " | " : "", twyp.txtDuration, Math.floor(r / 60), ":", String.zeroPad(r % 60, 2)].join("") } n = e.author, i = e.yt$statistics; return twyp.txtInfo.format([n ? n[0].name.$t : "", i ? i.viewCount : "n/a", i ? i.favoriteCount : "n/a", e.published.$t.substr(0, 10)]) }, clickPlay: function (e, t, n) { return function () { twyp.playVideo(e, t, n); return false } }, playVideo: function (t, n, r) { twyp.activePlayer = null; twyp.newPlayer = true; var i = e(r).closest(".twyp"), s = i.find(".twplr"), o = i.data(n).entry[t], u = o.author, a = twyp.fmtPlayer.format([twyp.findMediaHref(o, twyp.mimeFlash), o.media$group.media$title.$t, twyp.vidWidth, twyp.vidHeight, "&autoplay=1", i.attr("id")]); s.html(a); s.find("a").first().attr("field", i.attr("field")).click(function (e) { var t = e ? e : window.event; twyp.addToTiddler(t, this) }); s.append(e("<div/>").attr({ "class": "vidDescr", title: twyp.info(o) + twyp.info(o, true) }).html(o.media$group.media$description.$t)); if (e.fn.linkify) e(".vidDescr", s).linkify(); twyp.getRelated(t, n, i); if (u && u.length > 0) twyp.getByUser(i, u[0].uri.$t, u[0].name.$t) }, updateNav: function (t, n) { var r = t, i = twyp.txtPage, s = r - 1 < 1 ? "disabled" : ""; e(".vidNext", n).css("display", "inline").attr({ page: r + 1, title: i + (r + 1) }); e(".vidPrev", n).css("display", "inline").attr({ page: r - 1, title: i + (r - 1), disabled: s }) }, reset: function (t) { var n = e(t).closest(".twyp"); e(".vids, .colPlayer div[class]", n).empty(); e(".twplr", n).html(" "); e(".resultsNav", n).hide() }, addToTiddler: function (t, n) { var r = story.findContainingTiddler(n), i = e(n), s = i.html(); r = r ? r.getAttribute("tiddler") : ""; if (!r) return; if (!t.ctrlKey) s = prompt("Enter your desired video title", s); if (!s) return; store.setValue(r, i.attr("field"), "[[" + s + "|" + i.attr("rel") + "]]"); if (config.options.chkAutoSave) story.saveTiddler(r) }, stateChange: function (t) { var n, r = e(this), i = r.attr("last"), s = twyp.activePlayer.getVideoUrl(), o = s.indexOf("?v=") > 0; s = s.split(o ? "?v=" : "#!v=")[1].split("&")[0]; if (i != s) { r.attr("last", s); if (twyp.newPlayer) { twyp.newPlayer = false; return } if (i) { twyp.activePlayer.pauseVideo(); n = "http://gdata.youtube.com/feeds/api/videos/" + s + "?v=2"; twyp.appendScript(n, "twypVideoInfo", "twyp.getVideo") } } twyp.newPlayer = false }, getVideo: function (t) { var n = e("#" + twyp.activeTwyp); t.feed = { entry: [t.entry] }; n.data("video", t.feed); twyp.playVideo(0, "video", n.first()) } }; config.macros.twyp = { handler: function (t, n, r, i, s, o) { var u, a, f, l, c, h, p, d = story.findContainingTiddler(t), v = s.parseParams(null, null, true), m = getParam(v, "field", twyp.field), g = r.contains("notitle"), y = r.contains("slider"), b = "twyp" + Math.random().toString().substr(3), w = r.contains("search"); if (r.contains("player")) { w = w ? "<<twyp %0>>".format([s.replace("player", "")]) : ""; d = d ? d.getAttribute("tiddler") : ""; h = getParam(v, "video", store.getValue(d, m)); wikify(w, t); if (!h) return; l = h.indexOf("|"); c = h.substr(2, l - 2); f = ["<html>", twyp.fmtPlayer.format([h.substr(l + 1, h.length - l - 3), c, getParam(v, "width", twyp.vidWidth), getParam(v, "height", twyp.vidHeight), y & !r.contains("noautoplay") ? "&autoplay=1" : "", b]), "</html>"].join(""); if (y) { a = e("<div/>"); a.addClass("twypSlider"); p = a[0]; e(t).append(e("<a>" + twyp.lblShow.format([c]) + "</a>").attr({ href: "#", twyp: b, "class": "button", title: twyp.tipShow.format([c]) }).click(function (t) { var n = e(this), r = c, i = n.attr("twyp"), s = n.next(); if (s.css("display") != "block") { n.attr({ title: twyp.tipHide, video: r }).html(twyp.lblHide); s.attr("twyp", i); config.shadowTiddlers[i] = f; s.slideDown("slow") } else { r = n.attr("video"); n.attr("title", twyp.tipShow.format([r])).html(twyp.lblShow.format([r])); delete config.shadowTiddlers[i]; s.slideUp("slow") } })).append(a) } wikify(f, p ? p : t); u = e("a", p ? p : t).last(); if (g) { u.parent().hide().next().css("margin-top", "0.5em") } else u.click(function (e) { var t = e ? e : window.event; twyp.addToTiddler(t, this) }) } else { wikify(y ? twyp.fmtSlider.format([b]) : store.getTiddlerText(twyp.twypTemplate), t); e(".txtSearch", t).last().val(twyp.txtSearch).attr("title", twyp.lblSearch); e(".txtTag", t).last().val(twyp.txtTag).attr("title", twyp.lblTag); a = y ? e("[tiddler]", t).last() : e(t).closest("[tiddler]"); a.attr({ twyp: b, field: m, not: g }) } } }; story.closeTiddlerTWYP = story.closeTiddler; story.closeTiddler = function (t) { e(".twypSlider", this.getTiddler(t)).each(function (t, n) { delete config.shadowTiddlers[e(n).attr("twyp")] }); story.closeTiddlerTWYP.apply(this, arguments) }; try { e.getJSON("http://www.geoplugin.net/json.gp?jsoncallback=?", function (e) { if (e) twyp.restrictTo = e.geoplugin_countryCode }) } catch (t) { } window.onYouTubePlayerReady = function (t) { e("object, embed", e("#" + t)).each(function (t) { try { this.addEventListener("onStateChange", "twyp.stateChange"); twyp.activePlayer = this; e(this).attr("last", null) } catch (n) { } }) }; config.shadowTiddlers.StyleSheetTwyp = "/*{{{*/\n.twyp {font-size:12px;} \n.twyp .frmSearch{margin:10px 0 0 10px;} \n.twyp .txtSearch, .twyp .txtTag{width:100px;} \n.twyp input{border:1px solid #ddd;padding:1px 3px;cursor:pointer;} \n.twyp input:hover{border:1px solid #999;} \n.twyp .colResults {float:left;margin-top:0.5em;width:390px;padding-left:10px;} \n.twyp .vids {width:100%;} \n.twyp .vids img{margin:5px 0 5px 5px;width:100px;cursor:pointer;float:right;clear:none;} \n.twyp .vid{clear:both;font-size:0.9em;padding:5px;} \n.twyp .vid:hover{background:#ddd;} \n.twyp .desc a{display:block;padding:1px 3px;} \n.twyp .desc p{max-height:70px;overflow:hidden;margin-top:5px;display:block;max-width:380px;} \n.twyp .desc p a{display:inline;} \n.twyp .desc:hover p{width:270px;max-height:200px;overflow:auto;} \n.twyp .desc span {font-weight:bold;color:#666;} \n.twyp .resultsNav{text-align:right;margin-bottom:2em;} \n.twyp .resultsNav input, .btnSearch{margin:0.5em 0 0 0.5em;font-weight:bold;width:80px;} \n.twyp .colPlayer {float:left;width:390px;margin:0 5px;} \n.twplr .vidDescr {max-height:1.5em;overflow:hidden;} \n.twplr .vidDescr:hover {max-height:250px;overflow:auto;} \n.twyp .colPlayer img {margin:1px;cursor:pointer;width:72px;height:56px;} \n.twyp h2, .twyp h3 {margin-top: 0.6em;} \n.twyp .vidUser, .vidRel{margin:0 1em 0 0;} \n.twyp .userInfo, .twyp .relatedInfo{padding-right:20px;height:auto;overflow:hidden;font-weight:bold;color:#666;} \n.twypSlider {display:none;margin-bottom:10px;} \n.twypSlider object{display:block;} \n/*}}}*/"; store.addNotification("StyleSheetTwyp", refreshStyles) })(jQuery)/*
!TEMPLATE
<html>
<div class="twyp">
	<form class="frmSearch" onsubmit="twyp.getResults(this,this.query.value,this.search.value); return false;">
		<select name="query">
			<option value="all" selected="true">all videos</option>
			<option value="rated">top rated</option>
			<option value="recent">most recent</option>
			<option value="popular">most popular</option>
			<option value="discuss">most discussed</option>
			<option value="respond">most responded</option>
			<option value="featured">recently featured</option>
		</select>
		<input name="search" class="txtSearch" type="text" value="" onclick="this.select();">
		<input name="category" class="txtTag" type="text" value="" onclick="this.select();">
		<input type="submit" class="btnSearch" value="Search">
		<input type="button" class="btnSearch" value="Reset" onclick="twyp.reset(this);">
	</form>
	<div class="colPlayer">
		<div class="twplr"></div>
		<div>
			<div class="vidRel"></div>
			<div class="relatedInfo">&nbsp;</div>
			<div class="vidUser"></div>
			<div class="userInfo">&nbsp;</div>
		</div>
	</div> 
	<div class="colResults">
		<div class="vids"></div>
		<form class="resultsNav">
			<input type="button" class="vidPrev" value="&laquo; back" style="display: none;" onclick="twyp.getResults(this);"></input>
			<input type="button" class="vidNext" value="next &raquo;" style="display: none;" onclick="twyp.getResults(this);"></input>
		</form>
	</div>
</div>
<div class="tagClear"></div>
</html>
!END*/
//%/