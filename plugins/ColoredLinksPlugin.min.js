/***
|''Name''|ColoredLinksPlugin|
|''Description''|adds color to tiddlyLinks depending on the tag assigned to the corresponding tiddler|
|''Documentation''|http://ColoredLinks.tiddlyspot.com|
|''Version''|1.0.3 (2010-09-30)|
|''Author''|[[TobiasBeer]]|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/ColoredLinksPlugin.min.js|
|''License''|[[Creative Commons Attribution-Share Alike 3.0|http://creativecommons.org/licenses/by-sa/3.0/]]|
!Code
***/
//{{{
config.extensions.coloredLinks = { colorTags: true, colorTitles: true, titleSelector: "div.title", excludeTagged: "noColor", color: function (e, t, n) { var r, i = config.options, s = e, o, u = "", a, f, l = "", c; if (n) l = t; else { do { l = s && s.getAttribute ? s.getAttribute("tiddler") : null; u = l ? s : u; s = s.parentNode } while (s); l = u ? u.getAttribute("tiddler") : "" } a = store.getTiddler(l); if (a && a.tags.containsAny(this.excludeTagged.readBracketedList())) return; a = store.getTiddler(t); if (a && a.tags) { f = 0; while (!c && f < a.tags.length) { o = store.getValue(a.tags[f], "tagcolor"); c = o ? a.tags[f] : ""; f++ } if (!c) c = a.tags[0] } o = o ? o : store.getValue(t, "tagcolor"); if (!c && this.colorTags && o) c = t; if (o) { o = o.replace(/\s*;\s*/g, '","').replace(/\s*:\s*/g, '":"').trim(); if (o.substr(o.length - 2, 2) == ',"') o = o.substr(0, o.length - 2); o = '{"' + o + "}"; jQuery(e).css(jQuery.parseJSON(o)).addClass("coloredLink") } if (c) jQuery(e).attr("firsttag", c) } }; createTiddlyLink_COLOR = createTiddlyLink; createTiddlyLink = function (e, t, n, r, i, s, o) { var u = createTiddlyLink_COLOR.apply(this, arguments); config.extensions.coloredLinks.color(u, t); return u }; createTagButton_COLOR = createTagButton; createTagButton = function (e, t, n, r, i) { var s = createTagButton_COLOR.apply(this, arguments); addClass(s, store.getTaggedTiddlers(t).length > 0 ? "hastags" : "hasnotags"); config.extensions.coloredLinks.color(s, t); return s }; config.macros.allTags.handler_COLOR = config.macros.allTags.handler; config.macros.allTags.handler = function (e, t, n) { config.macros.allTags.handler_COLOR.apply(this, arguments); jQuery(".button, .tiddlyLink", e).each(function (e) { var t = jQuery(this), n = t.attr("tiddlyLink"); if (!n && t.hasClass("hastags") || t.hasClass("hasnotags")) n = t.attr("tag"); if (n) config.extensions.coloredLinks.color(this, n) }) }; Story.prototype.refreshTiddler_COLOR = Story.prototype.refreshTiddler; Story.prototype.refreshTiddler = function (e, t, n, r, i) { var s = Story.prototype.refreshTiddler_COLOR.apply(this, arguments), o = config.extensions.coloredLinks; if (!e) alert("foo"); if (o.colorTitles) o.color(jQuery(s).find(o.titleSelector)[0], e, true); return s }
//}}}