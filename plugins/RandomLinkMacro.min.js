/***
|''Name''|RandomLinkMacro|
|''Description''|creates a random tiddlyLink (refreshes on click)|
|''Documentation''|http://tobibeer.tiddlyspace.com/#RandomLink|
|''Author''|Tobias Beer|
|''Version''|1.5.0 (2011-12-05)|
|''Source''|https://raw.github.com/tobibeer/TiddlyWikiPlugins/master/plugins/RandomLinkMacro.js|
|''License''|[[Creative Commons Attribution-Share Alike 3.0|http://creativecommons.org/licenses/by-sa/3.0/]]|
|''~CoreVersion''|2.5.3|
/%***/
config.macros.randomlink = { closeLast: true, cssClass: "tiddlyLink tiddlyLinkExisting", display: null, tipOpen: "Click to show '%0'", handler: function (e, t, n, r, i, s) { var o = i.parseParams(null, null, true); this.get(getParam(o, "label", ""), getParam(o, "tags", ""), getParam(o, "class", this.cssClass), getParam(o, "close", this.closeLast).toString(), e) }, get: function (e, t, n, r, i) { var s, o, u, a, f, l, c, h = [], p, d = e || window.event; cmr = config.macros.randomlink; if (!i) { var v = this, e = v.getAttribute("label"), m = v.getAttribute("tiddler"), t = v.getAttribute("tags"), n = v.getAttribute("css"), r = v.getAttribute("close") == "true", g = v.getAttribute("last") } p = t ? t.readBracketedList() : null; if (p) { p.map(function (e) { var t = store.getTaggedTiddlers(e); t.map(function (e) { h.pushUnique(e) }) }) } else h = store.getTiddlers(); u = h.length; if (!u) return; f = h[Math.floor(Math.random() * u)]; l = f.title; tip = cmr.tipOpen.format([l]); if (v) { if (!e) v.innerHTML = l; v.setAttribute("tiddler", l); v.setAttribute("title", tip); if (d.ctrlKey) return false; else { v.setAttribute("last", m); if (r) { c = story.findContainingTiddler(v); c = c ? c.getAttribute("tiddler") : ""; if (g && g != c) story.closeTiddler(g, true) } story.displayTiddler(cmr.display, m) } } else createTiddlyButton(i, e ? e : l, tip, cmr.get, "randomLink " + n, null, null, { tiddler: l, label: e, tags: t, css: n, close: r }) } }
//%/